#!/bin/sh
# call this script every minute.

[ -f /tmp/boot_done ] || exit 0
local wds_enable
wds_enable="no"

is_wds_enable(){
	local id=$1
	
	local mode
	local enable
	
	config_get mode $id mode "ap"
	config_get enable $id enable "off"
	
	if [ $mode == "sta" -a $enable == "on" ] ;
	then
		wds_enable="yes";
	fi
}

# detect wan error, ready to load wan_error.
wportalctrl_init_wan_error(){
	local if_account_exist
	local ip
	config_load network
	config_get ip lan ipaddr ""
	
#	local defcfg
#	config_load wportal
#	config_get defcfg defcfg defcfg "no"

	. /lib/wportal/wportal.sh
	is_account_exist
	if_account_exist=$?
	
	if [ $if_account_exist == "0" ] ;
	then
		# factory default state,load init page;
		wportalctrl -s -u http://$ip/webpages/init.html -i $ip
		cat /tmp/wportal/status | grep -E "(init)"
		if [ $? -eq 0 ] ;
		then
			return
		fi
		wportalctrl -c
		config_load network
		config_get ip lan ipaddr ""
		local domain
		config_load domain_login
		config_get domain tp_domain domain ""
		local lan_ip_addr
		config_load network
		config_get lan_ip_addr lan ipaddr $domain
		wportalctrl -s -u http://$lan_ip_addr/webpages/init.html -i $ip
		wportalctrl -D -Y
		
		local lan_mask
		config_get lan_mask lan netmask "255.255.255.0"
		wportalctrl -m $lan_mask
		
		echo "init" > /tmp/wportal/status
	else
		# wan port error
		# no operation in wds mode
		config_clear
		config_load wireless 
		config_foreach is_wds_enable
		
		if [ $wds_enable == "yes" ];
		then
			echo "stop" > /tmp/wportal/status
			wportalctrl -c
			rm -f /tmp/wportal/online.lua
			return
		fi
		
		config_clear
		config_load network 
		config_get wan_type wan wan_type ""
		config_get conn_mode internet conn_mode ""
		
		if [[ $wan_type == "pppoe" ]] || [[ $wan_type == "l2tp" ]] || [[ $wan_type == "pptp" ]];
		then
			if [ $conn_mode == "demand" ];
			then
				cat /tmp/wportal/online.lua | grep -E "(poor_connected|unplugged)" > /dev/null
				if [ $? -eq 1 ] ;
				then
					echo "stop" > /tmp/wportal/status
					wportalctrl -c
					rm -f /tmp/wportal/online.lua
					return
				fi
			fi
		fi
		
		local wan_error_enable	# whether loading wan_error
		
		config_load wportal
		config_get wan_error_enable wanerror enable "yes"
		
		if [ $wan_error_enable == "no" ] ;
		then
			cat /tmp/wportal/status | grep -E "(wan_error)"
			if [ $? -eq 0 ] ;
			then
				echo "stop" > /tmp/wportal/status
				wportalctrl -c
				rm -f /tmp/wportal/online.lua
			fi
			return 
		fi
		
		wportalctrl -s -u http://$ip/webpages/wan_error.html -i $ip
		cat /tmp/wportal/status | grep -E "(wan_error)"
		if [ $? -eq 0 ] ;
		then
			return
		fi
		wportalctrl -c
		local domain
		config_load domain_login
		config_get domain tp_domain domain ""
		local lan_ip_addr
		config_load network
		config_get lan_ip_addr lan ipaddr $domain
		wportalctrl -s -u http://$lan_ip_addr/webpages/wan_error.html -i $ip
		wportalctrl -D -Y
		
		local lan_mask
		config_get lan_mask lan netmask "255.255.255.0"
		wportalctrl -m $lan_mask
		
#		config_load wportal
#		config_foreach wportalctrl_insert_wan_error_mac_forever
		echo "wan_error" > /tmp/wportal/status
	fi
}

LIST="google.com amazon.com yahoo.com ebay.com wikipedia.org reddit.com netflix.com live.com bing.com linkedin.com tp-link.com"

online_check() {
	times=`seq 1 $1`
	for i in times
	do
		CHECK_URL=$(echo $LIST | awk 'BEGIN{srand();} {while(n<1){num=int(rand()*NF+1);if(!(num in a)){printf $num" ";a[num]=1;n++}}}')
		online-test $CHECK_URL
		if [ $? -eq 1 ] ;
		then
			continue;
		else
			return 0
		fi
	done
	return 1
}

online_check_thread(){
	echo 'onlineTestError="poor_connected"' > /tmp/wportal/online.lua
	wportalctrl_init_wan_error
	if [ ! -e /tmp/lock/wportal_lock ] ;
	then
		touch /tmp/lock/wportal_lock
		while ( cat /tmp/wportal/online.lua | grep -E "(poor_connected)" > /dev/null ) ;
		do
			online_check 1
			if [ $? -eq 0 ] ;then
				wportalctrl -c
				echo "stop" > /tmp/wportal/status
				break;
			else
				echo 'onlineTestError="poor_connected"' > /tmp/wportal/online.lua
			fi
			
			sleep 2
		
		done
		rm -f /tmp/lock/wportal_lock
	fi
}

. /etc/functions.sh

mkdir -p /tmp/wportal



online_check 3
if [ $? -eq 1 ] ;
then
	# wan error.
	online_check_thread &
else
	# wan ok, reset wportal status.
	rm -f /tmp/wportal/online.lua
	cat /tmp/wportal/status | grep -E "(wan_error)"
	if [ $? -eq 0 ] ;
	then
		wportalctrl -c
		echo "stop" > /tmp/wportal/status
	fi
	# ok, check whether the upgrade window needs to be loaded.
	. /lib/wportal/wportal.sh
	wportalctrl_time_check
fi

